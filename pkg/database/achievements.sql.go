// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: achievements.sql

package database

import (
	"context"
	"database/sql"
)

const createAchievement = `-- name: CreateAchievement :one
INSERT INTO achievements (
  name, description, image_url, bundle_id, owner_id
) VALUES (
  ?, ?, ?, ?, ?
) RETURNING id, name, description, image_url, bundle_id, owner_id, created_at, updated_at
`

type CreateAchievementParams struct {
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
	ImageUrl    sql.NullString `json:"image_url"`
	BundleID    sql.NullInt64  `json:"bundle_id"`
	OwnerID     string         `json:"owner_id"`
}

func (q *Queries) CreateAchievement(ctx context.Context, arg CreateAchievementParams) (Achievement, error) {
	row := q.db.QueryRowContext(ctx, createAchievement,
		arg.Name,
		arg.Description,
		arg.ImageUrl,
		arg.BundleID,
		arg.OwnerID,
	)
	var i Achievement
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.ImageUrl,
		&i.BundleID,
		&i.OwnerID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
